language: cpp
sudo: required

matrix:
  include:
    - os: linux
      before_install:
        # Update apt-get
        - sudo apt-get update

        # Install conda
        - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh
        - ./miniconda.sh -b
        - export PATH=/home/travis/miniconda/bin:$PATH
	- ls /home/travis/miniconda/bin
	- ls $HOME/miniconda/etc/
	- ls $HOME/miniconda/etc/profile.d
        - conda update --yes conda

        #- bash miniconda.sh -b -p $HOME/miniconda
        #- source "$HOME/miniconda/etc/profile.d/conda.sh"
        #- hash -r
        #- conda config --set always_yes yes --set changeps1 no
        #- conda update -q conda
        #- conda info -a

        # Install pymdi
        - conda install -c conda-forge pymdi

        - git status
        - echo "Before install"
      install:
        - echo "Install"
      script:
        - echo "Script"
        - ./.travis/tutorial.sh
    #  deploy:
    #    provider: pages
    #    skip_cleanup: true
    #    github_token: $mdi_key  # Set in the settings page of your repository, as a secure variable
    #    keep_history: true
    #  on:
    #    branch: master
    #- os: linux
    #  compiler: gcc
    #  env: 
    #    - LAMMPS_INSTALL="mpi"
    #    - TESTS=""
    #- os: osx
    #  addons:
    #    apt_packages:
    #      - gfortran
    #  env: 
    #    - LAMMPS_INSTALL="serial"
    #    - TESTS="not mpi"
    #- os: osx
    #  addons:
    #    apt_packages:
    #      - gfortran
    #  env: 
    #    - LAMMPS_INSTALL="serial"
    #    - TESTS="not mpi"
    #    - MPI=openmpi

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get install gfortran
        sudo apt-get install mpich libmpich-dev
        sudo pip install mpi4py
        sudo pip install numpy
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update > /dev/null
      if [ "$MPI" != "" ]; then
         brew install $MPI
      fi
    fi
  - export FC=gfortran
  - sudo pip install -U pytest pytest-cov

install:
  - BASE_PATH=$(pwd)
  - echo ${BASE_PATH}
  

script:
  - ls
  - echo "Finished script"

